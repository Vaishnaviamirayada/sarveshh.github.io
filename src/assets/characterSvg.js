import React, { useEffect } from "react";
import { gsap } from "gsap";

const CharacterSVG = (props) => {
  useEffect(() => {
    gsap.config({
      force3D: false,
      nullTargetWarn: false,
      trialWarn: false,
    });
    const meTl = gsap.timeline({
      onComplete: addMouseEvent,
      delay: 1,
    });

    const blink = gsap.timeline({
      repeatDelay: 15,
      paused: true,
    });

    blink
      .to(
        ".eye-right, .eye-left",
        {
          duration: 0.01,
          opacity: 0,
        },
        0
      )
      .to(
        ".eye-right-2, .eye-left-2",
        {
          duration: 0.01,
          opacity: 1,
        },
        0
      )
      .to(
        ".eye-right, .eye-left",
        {
          duration: 0.01,
          opacity: 1,
        },
        0.15
      )
      .to(
        ".eye-right-2 , .eye-left-2",
        {
          duration: 0.01,
          opacity: 0,
        },
        0.15
      );

    let xPosition;
    let yPosition;

    let height;
    let width;

    function percentage(partialValue, totalValue) {
      return (100 * partialValue) / totalValue;
    }

    function updateScreenCoords(event) {
      xPosition = event.clientX;
      yPosition = event.clientY;
    }

    let storedXPosition = 0;
    let storedYPosition = 0;

    // gsap can use queryselector in the quick setter but this is better for performance as it touches the DOM less
    const dom = {
      eye: document.querySelectorAll(".eye"),
      innerFace: document.querySelector(".inner-face"),
    };

    function animateFace() {
      if (!xPosition) return;
      // important, only recalculating if the value changes
      if (storedXPosition === xPosition && storedYPosition === yPosition)
        return;

      // range from -50 to 50
      let x = percentage(xPosition, width) - 50;
      let y = percentage(yPosition, height) - 50;

      // range from -20 to 80
      let yHigh = percentage(yPosition, height) - 20;
      // range from -80 to 20f
      let yLow = percentage(yPosition, height) - 80;

      gsap.to(dom.eye, {
        yPercent: yHigh / 3,
        xPercent: x / 2,
      });
      gsap.to(dom.innerFace, {
        yPercent: y / 6,
        xPercent: x / 8,
      });
      storedXPosition = xPosition;
      storedYPosition = yPosition;
    }

    // function being called at the end of main timeline
    function addMouseEvent() {
      const safeToAnimate = window.matchMedia(
        "(prefers-reduced-motion: no-preference)"
      ).matches;

      if (safeToAnimate) {
        window.addEventListener("mousemove", updateScreenCoords);

        // gsap's RAF, falls back to set timeout
        gsap.ticker.add(animateFace);

        blink.play();
      }
    }

    // update if browser resizes
    function updateWindowSize() {
      height = window.innerHeight;
      width = window.innerWidth;
    }
    updateWindowSize();
    window.addEventListener("resize", updateWindowSize);
  }, []);

  return (
    <svg
      id="Layer_1"
      x="0px"
      y="0px"
      style={{
        enableBackground: "new 0 0 702 702",
        height: "450",
      }}
      viewBox="0 0 512 512"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <defs />
      <path
        className="bg"
        d="M 91.493 498.796 C 91.493 498.796 172.815 565.528 288.119 550.295 C 403.421 535.057 513.644 424.242 511.557 305.399 C 509.471 186.559 480.833 112.41 417.711 92.096 C 354.591 71.779 291.85 149.653 226.041 159.811 C 160.231 169.968 72.745 106.045 28.016 168.307 C -16.712 230.573 -21.621 402.199 91.493 498.796 Z"
        fill="rgb(111, 220, 191)"
        style={{}}
        transform="matrix(0.999677, 0.02543, -0.02543, 0.999677, 8.23642, -6.381531)"
      />
      <g className="me">
        <path
          style={{
            fill: "#00BEA5",
          }}
          d="M 300.051 326.987 L 300.051 357.746 C 300.051 365.613 305.267 372.527 312.83 374.688 L 385.911 395.568 C 408.803 402.108 425.886 421.243 429.801 444.727 L 437.594 491.481 C 439.384 502.222 431.102 511.998 420.214 511.998 L 91.787 511.998 C 80.899 511.998 72.616 502.221 74.407 491.481 L 82.2 444.727 C 86.114 421.242 103.197 402.108 126.09 395.568 L 199.171 374.688 C 206.736 372.526 211.95 365.612 211.95 357.746 L 211.95 326.987 L 300.051 326.987 Z"
        />
        <path
          style={{
            fill: "#B48764",
          }}
          d="M 256.001 441.519 C 293.233 441.519 324.292 415.121 331.504 380.024 L 312.831 374.689 C 305.266 372.528 300.052 365.613 300.052 357.747 L 300.052 326.988 L 211.95 326.988 L 211.95 357.747 C 211.95 365.614 206.734 372.528 199.171 374.689 L 180.498 380.024 C 187.709 415.122 218.769 441.519 256.001 441.519 Z"
        />
        <path
          style={{
            fill: "#966D50",
          }}
          d="M 300.051 335.798 L 275.823 326.988 L 211.95 326.988 L 211.95 357.747 C 211.95 365.614 206.734 372.528 199.171 374.689 L 180.498 380.024 L 180.498 380.025 C 254.767 415.443 300.051 335.798 300.051 335.798 Z"
        />
        <g>
          <path
            style={{
              fill: "#00AA9A",
            }}
            d="M256.001,459.14c44.307,0,82.936-31.168,92.435-74.277l-16.922-4.835l-0.01-0.002 c-7.212,35.095-38.271,61.494-75.503,61.494s-68.291-26.398-75.503-61.494l-0.01,0.002l-16.922,4.835 C173.064,427.971,211.692,459.14,256.001,459.14z"
          />
          <path
            style={{
              fill: "#00AA9A",
            }}
            d="M101.032,409.893c-9.734,9.093-16.558,21.181-18.833,34.836l-7.793,46.754 C72.617,502.223,80.898,512,91.786,512h49.681v-30.222c0-9.003-2.759-17.789-7.904-25.176L101.032,409.893z"
          />
          <path
            style={{
              fill: "#00AA9A",
            }}
            d="M410.969,409.893c9.734,9.093,16.558,21.181,18.833,34.836l7.793,46.754 c1.79,10.74-6.492,20.517-17.38,20.517h-49.681v-30.222c0-9.003,2.759-17.789,7.904-25.176L410.969,409.893z"
          />
        </g>
        <g>
          <path
            style={{
              fill: "rgb(14, 11, 11)",
            }}
            d="M 379.343 36.253 C 381.546 20.835 398.065 28.911 398.065 28.911 C 387.052 -28.355 272.154 20.835 272.154 20.835 L 282.8 9.822 C 229.297 -20.325 162.395 28.544 162.395 28.544 C 141.471 21.936 88.61 42.494 88.61 92.784 C 88.61 144.177 115.04 221.266 115.04 221.266 L 405.774 221.266 C 405.774 221.266 414.584 124.354 414.584 89.114 C 414.584 53.874 379.343 36.253 379.343 36.253 Z"
          />
          <g>
            <path
              style={{
                fill: "#C39772",
              }}
              d="M 388.153 203.646 L 388.153 124.355 L 123.849 124.355 L 123.849 203.646 C 114.118 203.646 106.229 211.534 106.229 221.266 L 106.229 238.886 C 106.229 248.617 114.118 256.506 123.849 256.506 C 124.335 256.506 124.791 256.401 125.266 256.363 C 130.538 285.956 150.656 311.28 179.229 322.709 L 223.28 340.329 C 244.284 348.731 267.716 348.731 288.721 340.329 L 332.772 322.709 C 361.347 311.28 381.465 285.956 386.735 256.363 C 387.211 256.402 387.667 256.506 388.152 256.506 C 397.883 256.506 405.772 248.617 405.772 238.886 L 405.772 221.266 C 405.773 211.534 397.884 203.646 388.153 203.646 Z"
            />
            <path
              style={{
                fillRule: "nonzero",
                fill: "rgb(14, 11, 11)",
              }}
              d="M 132.659 203.646 C 132.659 203.646 132.659 159.595 159.089 133.165 C 159.089 133.165 176.204 139.625 211.95 133.165 C 234.801 129.035 239.115 133.165 239.115 133.165 C 239.115 133.165 237.279 151.336 211.95 159.595 C 211.95 159.595 238.38 177.215 264.811 150.785 L 262.975 159.962 C 262.975 159.962 290.873 165.468 315.836 136.101 C 315.836 136.101 325.381 135.366 335.292 141.974 C 352.584 153.502 370.533 146.868 370.533 146.868 C 370.533 146.868 388.153 168.404 388.153 203.645 L 405.773 203.645 L 405.773 106.733 L 115.038 106.733 L 115.038 203.645 L 132.658 203.645 L 132.658 203.646 L 132.659 203.646 Z"
            />
            <path
              style={{
                fill: "#966D50",
              }}
              d="M 256.001 300.557 C 240.338 300.557 225.686 296.703 215.805 289.979 C 211.783 287.243 210.737 281.762 213.478 277.741 C 216.209 273.724 221.695 272.677 225.716 275.414 C 232.642 280.124 243.964 282.938 256.001 282.938 C 268.038 282.938 279.36 280.124 286.286 275.414 C 290.317 272.674 295.789 273.715 298.524 277.741 C 301.264 281.763 300.219 287.244 296.197 289.979 C 286.315 296.703 271.663 300.557 256.001 300.557 Z"
              className="mouth"
            />
            <path
              className="glasses"
              d="M 365.99 192.544 C 347.61 187.86 306.201 184.562 288.447 191.06 C 265.689 198.216 276.01 196.237 255.014 194.918 C 234.054 196.237 244.3 198.216 221.58 191.026 C 193.035 182.617 160.655 190.235 134.574 193.4 L 134.574 202.469 C 144.194 203.26 139.5 224.827 146.539 236.501 C 154.869 260.344 196.163 267.995 217.669 254.607 C 232.921 248.013 245.355 220.574 245.863 212.197 C 245.863 209.899 248.792 208.025 252.299 207.339 C 257.047 206.41 262.856 207.659 263.891 212.988 C 264.321 221.333 277.264 248.241 292.357 254.607 C 313.866 267.796 354.924 260.344 363.41 236.501 C 370.449 224.827 370.019 203.789 374.673 202.469 C 379.326 201.151 377.565 193.664 374.673 193.4 C 371.778 193.137 370.684 193.071 365.99 192.544 Z M 224.082 244.416 C 199.408 268.556 152.718 256.65 148.808 227.301 C 146.069 218.66 144.895 203.228 153.775 197.226 C 162.649 191.224 180.678 191.06 189.867 190.63 C 233.428 189.774 254.857 209.097 224.082 244.416 Z M 361.416 227.301 C 346.908 284.021 254.818 251.77 275.034 203.03 C 282.348 192.773 310.581 190.367 320.201 190.73 C 351.756 190.598 369.862 196.633 361.416 227.301 Z"
              opacity={0.48}
              style={{
                fill: "rgb(255, 255, 255)",
              }}
            />
            <path
              d="M 387.686 272.967 C 385.892 268.733 386.404 262.061 382.612 258.777 C 381.578 257.456 387.41 255.598 386.171 254.38 C 386.101 254.274 377.947 257.534 377.204 257.547 C 383.286 255.953 385.412 255.459 382.793 252.284 C 380.656 249.212 372.041 259.929 372.919 256.007 C 372.849 255.16 368.205 261.087 368.273 260.186 C 368.136 260.452 355.094 266.185 355.094 266.185 C 355.094 266.185 343.233 279.321 316.011 277.679 C 314.083 277.575 309.81 274.822 304.985 271.432 C 300.713 267.62 296.302 263.278 291.686 261.584 C 291.341 261.425 290.927 261.319 290.582 261.215 C 288.308 259.732 286.447 258.672 285.343 258.353 C 269.908 254.171 263.843 258.46 249.854 258.779 C 234.967 259.097 228.281 254.435 211.811 260.368 C 203.336 263.437 195.822 275.35 187.965 276.726 C 159.848 281.493 140.511 286.421 133.207 268.421 C 133.965 280.175 131.109 251.578 124.15 260.525 C 120.359 263.807 117.533 267.568 115.741 271.804 C 113.605 284.615 115.879 283.662 122.703 268.838 C 120.428 276.41 116.363 339.523 130.558 305.583 C 130.628 312.467 141.516 364.988 148.201 337.033 C 160.261 359.642 175.079 375.578 171.288 399.881 C 177.146 396.809 181.28 392.733 183.693 387.65 C 190.446 399.404 222.285 413.753 224.076 414.759 C 233.727 420.264 231.452 439.22 230.006 447.426 C 234.967 441.707 256.538 436.202 261.913 427.838 C 262.602 426.832 264.533 426.936 264.947 427.998 C 271.631 443.457 271.699 443.507 272.457 438.742 C 273.628 431.332 301.679 410.893 300.368 429.955 C 314.221 423.073 320.147 400.145 324.903 387.173 C 329.107 389.028 332.553 391.516 335.378 394.586 C 331.657 370.336 345.025 359.694 357.085 337.033 C 362.944 361.548 372.109 324.009 374.245 309.872 C 386.858 336.714 382.929 277.468 380.723 270.108 C 387.547 284.828 389.821 285.78 387.686 272.967 Z M 249.783 294.888 C 232.9 294.888 228.558 289.54 228.558 289.54 C 228.558 286.999 238.758 284.933 251.3 284.933 C 263.843 284.933 274.044 286.999 274.044 289.54 C 274.044 289.54 271.149 294.888 249.783 294.888 Z"
              style={{
                fill: "rgb(23, 21, 21)",
              }}
              transform="matrix(0.999855, 0.017002, -0.017002, 0.999855, 5.979848, -4.229102)"
            />
            <g
              transform="matrix(5.28685, 0, 0, 5.098803, -299.816803, -223.167465)"
              style={{}}
            >
              <path
                className="eye-left eye"
                d="M89.48 87.37c-.07 2.08 1.25 3.8 2.94 3.85s3.1-1.59 3.16-3.67-1.25-3.8-2.94-3.85-3.1 1.59-3.16 3.67z"
                style={{
                  fill: "rgb(90, 65, 55)",
                }}
              />
              <path
                className="eye-right eye"
                d="M113.67 87.37c-.07 2.08 1.25 3.8 2.94 3.85s3.1-1.59 3.16-3.67-1.25-3.8-2.94-3.85-3.1 1.59-3.16 3.67z"
                style={{
                  fill: "rgb(90, 65, 55)",
                }}
              />
              <path
                className="eye-right-2 eye"
                d="M114.11 88a5.72 5.72 0 002.48.72 6.46 6.46 0 002.59-.45"
                opacity={0}
                stroke="#282828"
                strokeWidth={1.04}
                style={{
                  fill: "rgb(90, 65, 55)",
                }}
              />
              <path
                className="eye-left-2 eye"
                d="M89.85 88a5.77 5.77 0 002.56.3 6.48 6.48 0 002.49-.87"
                opacity={0}
                stroke="#282828"
                strokeWidth={1.04}
                style={{
                  fill: "rgb(90, 65, 55)",
                }}
              />
            </g>
          </g>
        </g>
      </g>
    </svg>
  );
};

export default CharacterSVG;
